// For format details, see https://aka.ms/devcontainer.json. For config options, see the README at:
// https://github.com/microsoft/vscode-dev-containers/tree/v0.202.3/containers/docker-existing-dockerfile
{
	"name": "NOC",
	"runArgs": [
		"--init"
	],
	"build": {
		// Sets the run context to one level up instead of the .devcontainer folder.
		"context": "..",
		// Update the 'dockerFile' property if you aren't using the standard 'Dockerfile' filename.
		"dockerfile": "../Dockerfile",
		// Dockerfile target
		"target": "dev"
	},
	// VSCode settings
	"customizations": {
		"vscode": {
			"settings": {
				"python.pythonPath": "/usr/local/bin/python",
				"[python]": {
					"editor.defaultFormatter": "ms-python.black-formatter",
					"black-formatter.path": "/usr/local/bin/black",
					"editor.formatOnSave": true,
					"editor.codeActionsOnSave": {
						"source.fixAll": true
					},
					"ruff.path": "/usr/local/bin/ruff"
				},
				"[yaml]": {
					"editor.defaultFormatter": "redhat.vscode-yaml",
					"editor.formatOnSave": true,
					"editor.autoIndent": "advanced",
					"editor.tabSize": 2,
					"editor.detectIndentation": false
				},
				"[javascript]": {
					"editor.defaultFormatter": "dbaeumer.vscode-eslint",
					"editor.formatOnSave": true
				}
			},
			// Add the IDs of extensions you want installed when the container is created.
			"extensions": [
				"ms-python.python",
				"ms-python.black-formatter",
				"yzhang.markdown-all-in-one",
				"ms-azuretools.vscode-docker",
				"be5invis.toml",
				"redhat.vscode-yaml",
				"charliermarsh.ruff",
				"dbaeumer.vscode-eslint"
			]
		}
	},
	// Use 'forwardPorts' to make a list of ports inside the container available locally.
	// "forwardPorts": [],
	// Uncomment the next line to run commands after the container is created - for example installing curl.
	// "postCreateCommand": "apt-get update && apt-get install -y curl",
	// Uncomment when using a ptrace-based debugger like C++, Go, and Rust
	// "runArgs": [ "--cap-add=SYS_PTRACE", "--security-opt", "seccomp=unconfined" ],
	// Uncomment to use the Docker CLI from inside the container. See https://aka.ms/vscode-remote/samples/docker-from-docker.
	// "mounts": [ "source=/var/run/docker.sock,target=/var/run/docker.sock,type=bind" ],
	// Uncomment to connect as a non-root user if you've added one. See https://aka.ms/vscode-remote/containers/non-root.
	// "remoteUser": "vscode"
	"workspaceMount": "source=${localWorkspaceFolder},target=/opt/noc,type=bind",
	"workspaceFolder": "/opt/noc"
}