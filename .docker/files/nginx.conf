user  nginx;
worker_processes  1;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';


    sendfile        on;
    #tcp_nopush     on;

    keepalive_timeout  65;

    #gzip  on;


    upstream noc-web {
       server web:1200 weight=1 max_fails=3 fail_timeout=10;
    }

    upstream login {
       server login:1200 weight=1 max_fails=3 fail_timeout=10;
    }

    upstream card {
       server card:38493 weight=1 max_fails=3 fail_timeout=10;
    }

    upstream datastream {
       server datastream:1200 weight=1 max_fails=3 fail_timeout=10;
    }

    upstream mrt {
       server mrt:1200 weight=1 max_fails=3 fail_timeout=10;
    }

    upstream bi {
       server bi:1200 weight=1 max_fails=3 fail_timeout=10;
    }

    upstream grafana {
       server 127.0.0.1:8002 weight=1 max_fails=3 fail_timeout=10; # dummy ip not used
    }

    upstream grafanads {
       server grafanads:1200 weight=1 max_fails=3 fail_timeout=10;
    }

    log_format noc_format '$remote_addr - $remote_user [$time_local] '
        '"$request" $status $body_bytes_sent '
        '"$http_referer" "$http_user_agent" '
        '$upstream_addr '
        '$request_time $upstream_response_time $pipe';

    server {
        listen 80;
        server_name noc;
        location / {
            return 301 $scheme://$http_host$request_uri;
        }
    }

    server {
        listen 443 ssl;
        server_name noc;
        ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
        ssl_certificate /etc/nginx/ssl/noc.crt;
        ssl_certificate_key /etc/nginx/ssl/noc.key;
        add_header Strict-Transport-Security "max-age=63072000; includeSubDomains";
        add_header X-Content-Type-Options nosniff;
        add_header X-Backend-Server $upstream_addr always;
        add_header X-Front-Server $hostname always;
        ssl_stapling on;
        ssl_stapling_verify on;

        client_max_body_size 32m;

        error_log  /var/log/nginx/noc.error.log;

        # Proxy authentication settings
        error_page 401 = @error401;

        location @error401 {
            return 302 $scheme://$http_host/index.html?uri=$request_uri;
        }

        location /ng_stats {
            stub_status;
            access_log off;
        }

        # Login service api
        location /api/auth/ {
            internal;
            proxy_pass http://login;
            # internal;
            gzip on;
            gzip_types text/css text/x-js;
            proxy_set_header Host $http_host;
            proxy_set_header X-Scheme $scheme;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Original-URI $request_uri;
            proxy_set_header Content-Length '0';
        }

        # Login service api
        location /api/login/ {
            proxy_pass http://login;
            gzip on;
            gzip_types text/css text/x-js;
            proxy_set_header Host $http_host;
            proxy_set_header X-Scheme $scheme;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Original-URI $request_uri;
        }

        # Card service api
        location /api/card/ {
            proxy_pass http://card;
            auth_request /api/auth/auth/;
            # internal;
            gzip on;
            gzip_types text/css text/x-js text/json;
            proxy_set_header Host $http_host;
            proxy_set_header X-Scheme $scheme;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            auth_request_set $user $upstream_http_remote_user;
            proxy_set_header Remote-User $user;
            auth_request_set $groups $upstream_http_remote_groups;
            proxy_set_header Remote-Groups $groups;
        }

        # Datastream service api
        location /api/datastream/ {
            proxy_pass http://datastream;
            auth_request /api/auth/auth/;
            # internal;
            gzip on;
            gzip_types text/css text/x-js text/json;
            proxy_set_header Host $http_host;
            proxy_set_header X-Scheme $scheme;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            auth_request_set $user $upstream_http_remote_user;
            proxy_set_header Remote-User $user;
            auth_request_set $groups $upstream_http_remote_groups;
            proxy_set_header Remote-Groups $groups;
            auth_request_set $apiaccess $upstream_http_x_noc_api_access;
            proxy_set_header X-NOC-API-Access $apiaccess;
        }

        # mrt service api
        location /api/mrt/ {
            proxy_pass http://mrt;
            auth_request /api/auth/auth/;
            # internal;
            gzip on;
            gzip_types text/css text/x-js text/json;
            proxy_set_header Host $http_host;
            proxy_set_header X-Scheme $scheme;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            auth_request_set $user $upstream_http_remote_user;
            proxy_set_header Remote-User $user;
            auth_request_set $groups $upstream_http_remote_groups;
            proxy_set_header Remote-Groups $groups;
        }

        # bi service api
        location /api/bi/ {
            proxy_pass http://bi;
            auth_request /api/auth/auth/;
            # internal;
            gzip on;
            gzip_types text/css text/x-js text/json;
            proxy_set_header Host $http_host;
            proxy_set_header X-Scheme $scheme;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            auth_request_set $user $upstream_http_remote_user;
            proxy_set_header Remote-User $user;
            auth_request_set $groups $upstream_http_remote_groups;
            proxy_set_header Remote-Groups $groups;
        }

        location /ui/bi2/ {
            alias /opt/noc/ui/bi2/;
            try_files $uri /index.html =404;
            gzip on;
            gzip_types text/css text/javascript application/x-javascript application/json;
        }


        # grafanads service api
        location /api/grafanads/ {
            proxy_pass http://grafanads;
            auth_request /api/auth/auth/;
            # internal;
            gzip on;
            gzip_types text/css text/x-js;
            proxy_set_header Host $http_host;
            proxy_set_header X-Scheme $scheme;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            auth_request_set $user $upstream_http_remote_user;
            proxy_set_header Remote-User $user;
            auth_request_set $groups $upstream_http_remote_groups;
            proxy_set_header Remote-Groups $groups;
        }

        # UI files
        location ^~ /ui/ {
            alias /opt/noc/ui/;
            gzip on;
            gzip_types text/css text/javascript application/x-javascript application/json text/x-js application/javascript;
        }

        location /ui/bi/editor/ {
            alias /opt/noc/ui/bi/;
            try_files $uri /index.html =404;
            gzip on;
            gzip_types text/css text/javascript application/x-javascript application/json;
        }

        location /ui/grafana {
            proxy_pass http://grafana;
            auth_request /api/auth/auth/;
            rewrite  ^/ui/grafana/(.*)  /$1 break;
            proxy_set_header Host $http_host;
            proxy_set_header X-Scheme $scheme;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            auth_request_set $user $upstream_http_remote_user;
            proxy_set_header Remote-User $user;
            auth_request_set $groups $upstream_http_remote_groups;
            proxy_set_header Remote-Groups $groups;
            proxy_set_header Authorization "";
        }

        location = /index.html {
            proxy_pass http://noc-web;
            gzip on;
            gzip_types text/css text/x-js text/json;
            proxy_set_header Host $http_host;
            proxy_set_header X-Scheme $scheme;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            auth_request_set $user $upstream_http_remote_user;
            proxy_set_header Remote-User $user;
            auth_request_set $groups $upstream_http_remote_groups;
            proxy_set_header Remote-Groups $groups;
        }

        location / {
            rewrite ^/$ /index.html;
            rewrite ^/main/desktop/$ /index.html;
            proxy_pass http://noc-web;
            auth_request /api/auth/auth/;
            gzip on;
            gzip_types text/css text/x-js text/json;
            proxy_set_header Host $http_host;
            proxy_set_header X-Scheme $scheme;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            auth_request_set $user $upstream_http_remote_user;
            proxy_set_header Remote-User $user;
            auth_request_set $groups $upstream_http_remote_groups;
            proxy_set_header Remote-Groups $groups;
        }
    }
}
