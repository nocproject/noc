stages:
  - lint
  - build
  - test

flake8:
  stage: lint
  image: registry.getnoc.com/infrastructure/noc-lint:master
  script:
    - set -x
    - FLIST=$(git --no-pager diff --name-only $(git rev-parse --abbrev-ref HEAD) $(git merge-base origin/HEAD HEAD) |egrep ".py$" || true)
    - if [ ! -z "$FLIST" ]; then flake8 $FLIST; else true; fi
  except:
    - microservices
  tags:
    - docker

# waiting for https://github.com/rubik/xenon/issues/21
radon:
  stage: lint
  image: registry.getnoc.com/infrastructure/noc-lint:master
  script:
    - set -x
    - FLIST=$(git --no-pager diff --name-only $(git rev-parse --abbrev-ref HEAD) $(git merge-base origin/HEAD HEAD) |egrep ".py$" || true)
    - x=0
    #- if [ ! -z $FLIST ]; then xenon --max-absolute B --max-modules B --max-average B  $FLIST; fi
    - if [ ! -z "$FLIST" ]; then for i in "$FLIST" ; do (xenon --max-absolute B --max-modules B --max-average B $i; let x+=$?); done; fi
    - if [ "$x" -gt 0 ] ; then exit 1; fi
  except:
    - microservices
  tags:
    - docker
  allow_failure: true

pylint:
  stage: lint
  image: registry.getnoc.com/infrastructure/noc-lint:master
  script:
    - set -x
    - FLIST=$(git --no-pager diff --name-only $(git rev-parse --abbrev-ref HEAD) $(git merge-base origin/HEAD HEAD) |egrep ".py$" || true)
    - if [ ! -z "$FLIST" ]; then pylint "$FLIST" ; else true; fi
  except:
    - microservices
  tags:
    - docker
  allow_failure: true

futurize:
  stage: lint
  image: registry.getnoc.com/infrastructure/noc-lint:master
  script:
    - FLIST=$(git --no-pager diff --name-only $(git rev-parse --abbrev-ref HEAD) $(git merge-base origin/HEAD HEAD) |egrep ".py$" || true)
    - /bin/future.sh "$FLIST"
  except:
    - microservices
  tags:
    - docker
  allow_failure: true

build:
  stage: build
  image: registry.getnoc.com/noc/nocmc/microservices:build
  variables:
    NOC_PG_DB: noc
    NOC_PG_USER: noc
    NOC_PG_PASSWORD: noc
    BRANCH: microservices
  services:
    - name: registry.getnoc.com/infrastructure/postgres:dev
      alias: postgres
    - name: registry.getnoc.com/infrastructure/mongo:dev
      alias: mongo
  before_script:
    - export NOC_PG_ADDRESSES=registry.getnoc.com-infrastructure-postgres:5432
    - export NOC_MONGO_ADDRESSES=registry.getnoc.com-infrastructure-mongo:27017
  script:
    - find . -type f -name "*.py" -print0 | xargs -0 python -m py_compile
    - /usr/bin/cythonize -i speedup/*.pyx
    - python ./manage.py migrate
  only:
    - microservices
  tags:
    - docker
