---
all:
  children:
    dc-DC:
      hosts:
        noc-node-ubuntu20:
          activator_loglevel: info
          activator_power: 2
          activator_script_threads: 20
          activator_tos: 0
          ansible_ssh_pipelining: true
          bi_language: en-us
          bi_loglevel: info
          bi_power: 2
          bi_query_threads: 10
          card_language: en-us
          card_loglevel: info
          card_power: 2
          ch_datasource_loglevel: info
          ch_datasource_power: 2
          chwriter_batch_delay_ms: 1000
          chwriter_batch_size: 50000
          chwriter_channel_expire_interval: 300
          chwriter_loglevel: info
          chwriter_power: 1
          chwriter_records_buffer: 1000000
          classifier_default_interface_profile: default
          classifier_loglevel: info
          classifier_lookup_solution: noc.services.classifier.rulelookup.RuleLookup
          classifier_power: 2
          classifier_backup_power: 2
          clickhouse_db: noc
          clickhouse_password: noc
          clickhouse_query_size: 262144
          clickhouse_ro_password: noc
          clickhouse_ro_grafana_password: noc
          clickhouse_user: noc
          config_order: yaml:///opt/noc/etc/tower.yml,yaml:///opt/noc/etc/settings.yml,env:///NOC
          consul_master_token: null
          consul_power: bootstrap
          consul_replication_token: null
          consul_template_use_dedup: 'False'
          correlator_loglevel: info
          correlator_max_threads: 10
          correlator_power: 1
          correlator_backup_power: 1
          datastream_loglevel: info
          datastream_power: 2
          datastream_mode: wait
          datastream_whitelist_access: ""
          discovery_backup_power: 1
          discovery_loglevel: info
          discovery_max_threads: 10
          discovery_power: 2
          escalator_loglevel: info
          escalator_max_threads: 10
          escalator_power: 1
          goss_validate_fw: true
          goss_version: 0.3.11
          grafana_pg_password: grafana
          grafanads_db_threads: 10
          grafanads_loglevel: info
          grafanads_power: 2
          has_svc_activator: true
          has_svc_bi: true
          has_svc_bh: true
          has_svc_card: true
          has_svc_ch_datasource: true
          has_svc_chwriter: true
          has_svc_classifier: true
          has_svc_clickhouse: true
          has_svc_consul: true
          has_svc_consul_template: true
          has_svc_correlator: true
          has_svc_datastream: true
          has_svc_discovery: true
          has_svc_escalator: true
          has_svc_selfmon: true
          has_svc_goss: true
          has_svc_grafana: true
          has_svc_grafanads: true
          has_svc_liftbridge: true
          has_svc_login: true
          has_svc_mailsender: true
          has_svc_memcached: true
          has_svc_mongod: true
          has_svc_metrics: true
          has_svc_mrt: true
          has_svc_mx: true
          has_svc_nats: true
          has_svc_nbi: true
          has_svc_nginx: true
          has_svc_noc: true
          has_svc_kafka: true
          has_svc_kafkasender: true
          has_svc_pgbouncer: true
          has_svc_ping: true
          has_svc_postgres: true
          has_svc_sae: true
          has_svc_scheduler: true
          has_svc_syslogcollector: true
          has_svc_trapcollector: true
          has_svc_ui: true
          has_svc_web: true
          has_svc_worker: true
          install_method: git
          installation_type: eval
          kafka_cluster_id: ""
          kafka_kafka_insecure_certs: false
          kafka_loglevel: info
          kafka_memory_limit: 1
          login_language: en-us
          login_loglevel: info
          login_methods: local
          login_pam_service: noc
          login_power: 2
          login_radius_secret: null
          login_radius_server: null
          login_session_ttl: 7d
          mailsender_from_address: noc@example.com
          mailsender_helo_hostname: noc
          mailsender_loglevel: info
          mailsender_power: 1
          mailsender_smtp_password: null
          mailsender_smtp_port: 25
          mailsender_smtp_server: null
          mailsender_smtp_user: null
          mailsender_use_tls: 'False'
          memcached_max_clients: 1024
          memcached_max_memory: 64
          mongod_db: noc
          mongod_logging_destination: syslog
          mongod_password: noc
          mongod_power: server
          mongod_rs: noc
          mongod_user: noc
          mongod_version: "4.4"
          mrt_loglevel: info
          mrt_max_concurrency: 50
          mrt_power: 2
          nats_cluster_user: noc
          nats_cluster_password: noc
          nats_loglevel: info
          nbi_loglevel: info
          nbi_power: 2
          nbi_whitelist_access: ""
          nginx_cert: |
            -----BEGIN CERTIFICATE-----
            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
            -----END CERTIFICATE-----

          nginx_cert_key: |
            -----BEGIN PRIVATE KEY-----
            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
            GB3i9UFuEYEVOWBtjzEY5G2K1znlQQ==
            -----END PRIVATE KEY-----
          nginx_external_cert_management: 'False'
          nginx_http_redirect: 'True'
          nginx_json_logging: 'False'
          nginx_self_signed_cerificate: 'True'
          nginx_permit_firewall: 'True'
          noc_all_pools:
            - description: Default pool for NOC
              name: default
          noc_consul_token: noc
          noc_dc: DC
          noc_env: NOC
          noc_env_type: eval
          noc_group: noc
          noc_installation_name: Unconfigured installation
          noc_python_interpreter: python3
          noc_repo: https://github.com/nocproject/noc.git
          noc_root: /opt/noc
          noc_services:
            - config:
                loglevel: info
                power: 2
                script_threads: 20
                tos: 0
              config_order: yaml:///opt/noc/etc/tower.yml,yaml:///opt/noc/etc/settings.yml,yaml:///opt/noc/etc/pool-default.yml,env:///NOC
              environment:
                category: internal
                depends:
                  - noc
                  - sae
                  - discovery
                level: pool
                supervisord:
                  command: ./services/activator/service.py
                  oom_score_adj: 300
                  process_name: '%(program_name)s-%(process_num)02d'
                  startretries: 999
                  stdout_logfile_backups: 3
                  stdout_logfile_maxbytes: 10MB
                  stopwaitsecs: 3
              name: activator
              pool: default
            - config:
                loglevel: info
                power: 1
              config_order: yaml:///opt/noc/etc/tower.yml,yaml:///opt/noc/etc/settings.yml,env:///NOC
              environment:
                category: internal
                depends:
                  - noc
                level: global
                supervisord:
                  command: ./services/selfmon/service.py
                  oom_score_adj: 50
                  process_name: '%(program_name)s-%(process_num)02d'
                  startretries: 999
                  stdout_logfile_backups: 3
                  stdout_logfile_maxbytes: 10MB
                  stopwaitsecs: 2
              name: selfmon
              pool: null
            - config:
                language: en-us
                loglevel: info
                power: 2
                query_threads: 10
              config_order: yaml:///opt/noc/etc/tower.yml,yaml:///opt/noc/etc/settings.yml,env:///NOC
              environment:
                category: internal
                depends:
                  - noc
                  - clickhouse
                level: global
                required_assets:
                  - bi
                supervisord:
                  command: ./services/bi/service.py
                  oom_score_adj: 50
                  process_name: '%(program_name)s-%(process_num)02d'
                  startretries: 999
                  stdout_logfile_backups: 3
                  stdout_logfile_maxbytes: 10MB
                  stopwaitsecs: 2
              name: bi
              pool: null
            - config:
                language: en-us
                loglevel: info
                power: 2
              config_order: yaml:///opt/noc/etc/tower.yml,yaml:///opt/noc/etc/settings.yml,env:///NOC
              environment:
                category: internal
                depends:
                  - noc
                  - nginx
                level: global
                required_assets:
                  - card
                  - web
                supervisord:
                  command: ./services/card/service.py
                  oom_score_adj: 100
                  priority: 300
                  process_name: '%(program_name)s-%(process_num)02d'
                  startretries: 999
                  stdout_logfile_backups: 3
                  stdout_logfile_maxbytes: 10MB
                  stopwaitsecs: 1
              name: card
              pool: null
            - config:
                loglevel: info
                power: 2
              config_order: yaml:///opt/noc/etc/tower.yml,yaml:///opt/noc/etc/settings.yml,env:///NOC
              environment:
                category: internal
                depends:
                  - noc
                  - mongod
                level: global
                supervisord:
                  command: ./services/datasource/service.py
                  oom_score_adj: 999
                  priority: 100
                  process_name: '%(program_name)s-%(process_num)02d'
                  startretries: 999
                  stdout_logfile_backups: 3
                  stdout_logfile_maxbytes: 1MB
                  stopwaitsecs: 3
              name: ch_datasource
              pool: null
            - config:
                batch_delay_ms: 1000
                batch_size: 50000
                channel_expire_interval: 300
                loglevel: info
                power: 1
                records_buffer: 1000000
              config_order: yaml:///opt/noc/etc/tower.yml,yaml:///opt/noc/etc/settings.yml,env:///NOC
              environment:
                category: internal
                depends:
                  - noc
                  - clickhouse
                level: global
                supervisord:
                  command: ./services/chwriter/service.py
                  oom_score_adj: 10
                  priority: 300
                  process_name: '%(program_name)s-%(process_num)02d'
                  startretries: 999
                  stdout_logfile_backups: 3
                  stdout_logfile_maxbytes: 10MB
                  stopwaitsecs: 2
              name: chwriter
              pool: null
            - config:
                default_interface_profile: default
                loglevel: info
                lookup_solution: noc.services.classifier.rulelookup.RuleLookup
                power: 2
              config_order: yaml:///opt/noc/etc/tower.yml,yaml:///opt/noc/etc/settings.yml,yaml:///opt/noc/etc/pool-default.yml,env:///NOC
              environment:
                category: internal
                depends:
                  - noc
                  - mongod
                level: pool
                supervisord:
                  command: ./services/classifier/service.py
                  oom_score_adj: 50
                  priority: 300
                  process_name: '%(program_name)s-%(process_num)02d'
                  startretries: 999
                  stdout_logfile_backups: 3
                  stdout_logfile_maxbytes: 10MB
                  stopwaitsecs: 3
              name: classifier
              pool: default
            - config:
                loglevel: info
                max_threads: 10
                power: 1
              config_order: yaml:///opt/noc/etc/tower.yml,yaml:///opt/noc/etc/settings.yml,yaml:///opt/noc/etc/pool-default.yml,env:///NOC
              environment:
                category: internal
                depends:
                  - noc
                level: pool
                supervisord:
                  command: ./services/correlator/service.py
                  oom_score_adj: 20
                  priority: 150
                  process_name: '%(program_name)s-%(process_num)02d'
                  startretries: 999
                  stdout_logfile_backups: 3
                  stdout_logfile_maxbytes: 10MB
                  stopwaitsecs: 5
              name: correlator
              pool: default
            - config:
                loglevel: info
                power: 2
                mode: wait
              config_order: yaml:///opt/noc/etc/tower.yml,yaml:///opt/noc/etc/settings.yml,env:///NOC
              environment:
                category: internal
                depends:
                  - noc
                  - mongod
                level: global
                supervisord:
                  command: ./services/datastream/service.py
                  oom_score_adj: 999
                  priority: 100
                  process_name: '%(program_name)s-%(process_num)02d'
                  startretries: 999
                  stdout_logfile_backups: 3
                  stdout_logfile_maxbytes: 1MB
                  stopwaitsecs: 3
              name: datastream
              pool: null
            - config:
                backup_power: 1
                loglevel: info
                max_threads: 10
                power: 2
              config_order: yaml:///opt/noc/etc/tower.yml,yaml:///opt/noc/etc/settings.yml,yaml:///opt/noc/etc/pool-default.yml,env:///NOC
              environment:
                category: internal
                depends:
                  - noc
                level: pool
                supervisord:
                  command: ./services/discovery/service.py
                  oom_score_adj: 500
                  priority: 100
                  process_name: '%(program_name)s-%(process_num)02d'
                  startretries: 999
                  stdout_logfile_backups: 3
                  stdout_logfile_maxbytes: 10MB
                  stopwaitsecs: 3
              name: discovery
              pool: default
            - config:
                loglevel: info
                max_threads: 10
                power: 1
              config_order: yaml:///opt/noc/etc/tower.yml,yaml:///opt/noc/etc/settings.yml,env:///NOC
              environment:
                category: internal
                depends:
                  - noc
                level: global
                supervisord:
                  command: ./services/escalator/service.py
                  oom_score_adj: 5
                  priority: 50
                  process_name: '%(program_name)s'
                  startretries: 999
                  stdout_logfile_backups: 10
                  stdout_logfile_maxbytes: 10MB
                  stopwaitsecs: 3
              name: escalator
              pool: null
            - config:
                db_threads: 10
                loglevel: info
                power: 2
              config_order: yaml:///opt/noc/etc/tower.yml,yaml:///opt/noc/etc/settings.yml,env:///NOC
              environment:
                category: internal
                depends:
                  - noc
                  - grafana
                  - nginx
                level: global
                supervisord:
                  command: ./services/grafanads/service.py
                  oom_score_adj: 900
                  priority: 500
                  process_name: '%(program_name)s-%(process_num)02d'
                  startretries: 999
                  stdout_logfile_backups: 1
                  stdout_logfile_maxbytes: 10MB
                  stopwaitsecs: 1
              name: grafanads
              pool: null
            - config:
                language: en-us
                loglevel: info
                methods: local
                pam_service: noc
                power: 2
                radius_secret: null
                radius_server: null
                session_ttl: 7
              config_order: yaml:///opt/noc/etc/tower.yml,yaml:///opt/noc/etc/settings.yml,env:///NOC
              environment:
                category: internal
                depends:
                  - noc
                level: global
                supervisord:
                  command: ./services/login/service.py
                  oom_score_adj: 10
                  priority: 40
                  process_name: '%(program_name)s-%(process_num)02d'
                  startretries: 999
                  stdout_logfile_backups: 5
                  stdout_logfile_maxbytes: 10MB
                  stopwaitsecs: 3
              name: login
              pool: null
            - config:
                from_address: noc@example.com
                helo_hostname: noc
                loglevel: info
                power: 1
                smtp_password: null
                smtp_port: 25
                smtp_server: null
                smtp_user: null
                use_tls: 'False'
              config_order: yaml:///opt/noc/etc/tower.yml,yaml:///opt/noc/etc/settings.yml,env:///NOC
              environment:
                category: internal
                depends:
                  - noc
                level: global
                supervisord:
                  command: ./services/mailsender/service.py
                  oom_score_adj: 100
                  priority: 600
                  process_name: '%(program_name)s-%(process_num)02d'
                  startretries: 999
                  stdout_logfile_backups: 3
                  stdout_logfile_maxbytes: 10MB
                  stopwaitsecs: 3
              name: mailsender
              pool: null
            - config:
                loglevel: info
                max_concurrency: 50
                power: 2
              config_order: yaml:///opt/noc/etc/tower.yml,yaml:///opt/noc/etc/settings.yml,env:///NOC
              environment:
                category: internal
                depends:
                  - noc
                level: global
                supervisord:
                  command: ./services/mrt/service.py
                  oom_score_adj: 100
                  priority: 110
                  process_name: '%(program_name)s-%(process_num)02d'
                  startretries: 999
                  stdout_logfile_backups: 3
                  stdout_logfile_maxbytes: 10MB
                  stopwaitsecs: 3
              name: mrt
              pool: null
            - config:
                loglevel: info
                max_concurrency: 1
                power: 1
              config_order: yaml:///opt/noc/etc/tower.yml,yaml:///opt/noc/etc/settings.yml,env:///NOC
              environment:
                category: internal
                depends:
                  - noc
                level: global
                supervisord:
                  command: ./services/mx/service.py
                  oom_score_adj: 100
                  priority: 110
                  process_name: '%(program_name)s-%(process_num)02d'
                  startretries: 999
                  stdout_logfile_backups: 3
                  stdout_logfile_maxbytes: 10MB
                  stopwaitsecs: 3
              name: mx
              pool: null
            - config:
                loglevel: info
                power: 2
              config_order: yaml:///opt/noc/etc/tower.yml,yaml:///opt/noc/etc/settings.yml,env:///NOC
              environment:
                category: internal
                depends:
                  - noc
                level: global
                supervisord:
                  command: ./services/nbi/service.py
                  oom_score_adj: 999
                  priority: 100
                  process_name: '%(program_name)s-%(process_num)02d'
                  startretries: 999
                  stdout_logfile_backups: 3
                  stdout_logfile_maxbytes: 1MB
                  stopwaitsecs: 3
              name: nbi
              pool: null
            - config:
                loglevel: info
                power: 1
              config_order: yaml:///opt/noc/etc/tower.yml,yaml:///opt/noc/etc/settings.yml,env:///NOC
              environment:
                category: internal
                depends:
                  - noc
                level: global
                supervisord:
                  command: ./services/kafkasender/service.py
                  oom_score_adj: 100
                  priority: 110
                  process_name: '%(program_name)s-%(process_num)02d'
                  startretries: 999
                  stdout_logfile_backups: 3
                  stdout_logfile_maxbytes: 10MB
                  stopwaitsecs: 3
              name: kafkasender
              pool: null
            - config:
                backup_power: 1
                loglevel: info
                power: 4
                restore_threshold: 0
                throttle_threshold: 0
                tos: 0
              config_order: yaml:///opt/noc/etc/tower.yml,yaml:///opt/noc/etc/settings.yml,yaml:///opt/noc/etc/pool-default.yml,env:///NOC
              environment:
                category: internal
                depends:
                  - noc
                level: pool
                supervisord:
                  command: ./services/ping/service.py
                  oom_score_adj: 200
                  priority: 90
                  process_name: '%(program_name)s-%(process_num)02d'
                  startretries: 999
                  stdout_logfile_backups: 3
                  stdout_logfile_maxbytes: 10MB
                  stopwaitsecs: 1
                  user: root
              name: ping
              pool: default
            - config:
                db_threads: 4
                loglevel: info
                power: 2
              config_order: yaml:///opt/noc/etc/tower.yml,yaml:///opt/noc/etc/settings.yml,env:///NOC
              environment:
                category: internal
                depends:
                  - noc
                level: global
                supervisord:
                  command: ./services/sae/service.py
                  oom_score_adj: 300
                  priority: 90
                  process_name: '%(program_name)s-%(process_num)02d'
                  startretries: 999
                  stdout_logfile_backups: 3
                  stdout_logfile_maxbytes: 10MB
                  stopwaitsecs: 1
              name: sae
              pool: null
            - config:
                loglevel: info
                max_threads: 10
                power: 1
              config_order: yaml:///opt/noc/etc/tower.yml,yaml:///opt/noc/etc/settings.yml,env:///NOC
              environment:
                category: internal
                depends:
                  - noc
                level: global
                supervisord:
                  command: ./services/scheduler/service.py
                  oom_score_adj: 100
                  priority: 50
                  process_name: '%(program_name)s'
                  startretries: 999
                  stdout_logfile_backups: 3
                  stdout_logfile_maxbytes: 10MB
                  stopwaitsecs: 3
              name: scheduler
              pool: null
            - config:
                listen: 0.0.0.0:514
                loglevel: info
                power: 1
              config_order: yaml:///opt/noc/etc/tower.yml,yaml:///opt/noc/etc/settings.yml,yaml:///opt/noc/etc/pool-default.yml,env:///NOC
              environment:
                category: internal
                depends:
                  - noc
                level: pool
                supervisord:
                  command: ./services/syslogcollector/service.py
                  oom_score_adj: 50
                  priority: 200
                  process_name: '%(program_name)s'
                  startretries: 999
                  stdout_logfile_backups: 3
                  stdout_logfile_maxbytes: 10MB
                  stopwaitsecs: 3
                  user: root
              name: syslogcollector
              pool: default
            - config:
                listen: 0.0.0.0:162
                loglevel: info
                power: 1
              config_order: yaml:///opt/noc/etc/tower.yml,yaml:///opt/noc/etc/settings.yml,yaml:///opt/noc/etc/pool-default.yml,env:///NOC
              environment:
                category: internal
                depends:
                  - noc
                level: pool
                supervisord:
                  command: ./services/trapcollector/service.py
                  oom_score_adj: 50
                  priority: 200
                  process_name: '%(program_name)s'
                  startretries: 999
                  stdout_logfile_backups: 3
                  stdout_logfile_maxbytes: 10MB
                  stopwaitsecs: 2
                  user: root
              name: trapcollector
              pool: default
            - config:
                language: en-us
                loglevel: info
                max_threads: 10
                power: 2
              config_order: yaml:///opt/noc/etc/tower.yml,yaml:///opt/noc/etc/settings.yml,env:///NOC
              environment:
                category: internal
                depends:
                  - noc
                  - nginx
                level: global
                required_assets:
                  - web
                  - mib
                supervisord:
                  command: ./services/web/service.py
                  oom_score_adj: 300
                  priority: 50
                  process_name: '%(program_name)s-%(process_num)02d'
                  startretries: 999
                  stdout_logfile_backups: 3
                  stdout_logfile_maxbytes: 10MB
                  stopwaitsecs: 2
              name: web
              pool: null
            - config:
                loglevel: info
                power: 2
              config_order: yaml:///opt/noc/etc/tower.yml,yaml:///opt/noc/etc/settings.yml,env:///NOC
              environment:
                category: internal
                depends:
                  - noc
                  - nginx
                level: global
                supervisord:
                  command: ./services/ui/service.py
                  oom_score_adj: 300
                  priority: 50
                  process_name: '%(program_name)s-%(process_num)02d'
                  startretries: 999
                  stdout_logfile_backups: 3
                  stdout_logfile_maxbytes: 10MB
                  stopwaitsecs: 2
              name: ui
              pool: null
            - config:
                loglevel: info
                power: 2
              config_order: yaml:///opt/noc/etc/tower.yml,yaml:///opt/noc/etc/settings.yml,env:///NOC
              environment:
                category: internal
                depends:
                  - noc
                level: global
                supervisord:
                  command: ./services/metrics/service.py
                  oom_score_adj: 300
                  priority: 50
                  process_name: '%(program_name)s-%(process_num)02d'
                  startretries: 999
                  stdout_logfile_backups: 3
                  stdout_logfile_maxbytes: 10MB
                  stopwaitsecs: 2
              name: metrics
              pool: null
            - config:
                backup_power: 1
                loglevel: info
                power: 2
              config_order: yaml:///opt/noc/etc/tower.yml,yaml:///opt/noc/etc/settings.yml,env:///NOC
              environment:
                category: internal
                depends:
                  - noc
                level: global
                supervisord:
                  command: ./services/worker/service.py
                  oom_score_adj: 300
                  priority: 50
                  process_name: '%(program_name)s-%(process_num)02d'
                  startretries: 999
                  stdout_logfile_backups: 3
                  stdout_logfile_maxbytes: 10MB
                  stopwaitsecs: 2
              name: worker
              pool: null
          noc_user: noc
          noc_version: microservices
          noc_web_host: noc-node-ubuntu20
          node_id: 1
          pgbouncer_max_clients: 3000
          pgbouncer_max_db_connections: 10
          ping_backup_power: 1
          ping_loglevel: info
          ping_power: 4
          ping_restore_threshold: 0
          ping_throttle_threshold: 0
          ping_tos: 0
          playbook_link: git+https://github.com/nocproject/ansible_deploy@microservices
          postgres_max_clients: 300
          postgres_noc_db: noc
          postgres_noc_password: noc
          postgres_noc_user: noc
          postgres_power: master
          postgres_replicator_password: noc
          postgres_superuser_password: noc
          postgres_version: 14
          required_assets:
            - web
            - mib
            - bi
            - card
          sae_db_threads: 4
          sae_loglevel: info
          sae_power: 2
          scheduler_loglevel: info
          scheduler_max_threads: 10
          scheduler_power: 1
          syslogcollector_listen: 0.0.0.0:514
          syslogcollector_loglevel: info
          syslogcollector_power: 1
          syslogcollector_permit_firewall: 1
          tower_data: /tmp/dist
          tower_ssh_keys: /opt/tower/var/tower/ssh/NOC
          trapcollector_listen: "0.0.0.0:162"
          trapcollector_loglevel: info
          trapcollector_power: 1
          trapcollector_permit_firewall: 1
          web_language: en-us
          web_loglevel: info
          web_max_threads: 10
          web_power: 2
    noc-config-noc-node-ubuntu20:
      hosts:
        noc-node-ubuntu20: {}
    nodes:
      hosts:
        noc-node-ubuntu20: {}
    svc-activator:
      children:
        cfg-activator-default-noc-node-ubuntu20:
          hosts:
            noc-node-ubuntu20: {}
        svc-activator-read: {}
    svc-activator-exec:
      hosts:
        noc-node-ubuntu20: {}
    svc-bi:
      children:
        cfg-bi-noc-node-ubuntu20:
          hosts:
            noc-node-ubuntu20: {}
        svc-bi-read: {}
    svc-bi-exec:
      hosts:
        noc-node-ubuntu20: {}
    svc-bh-exec:
      hosts:
        noc-node-ubuntu20: {}
    svc-card:
      children:
        cfg-card-noc-node-ubuntu20:
          hosts:
            noc-node-ubuntu20: {}
        svc-card-read: {}
    svc-card-exec:
      hosts:
        noc-node-ubuntu20: {}
    svc-ch_datasource:
      children:
        cfg-ch_datasource-noc-node-ubuntu20:
          hosts:
            noc-node-ubuntu20: {}
        svc-ch_datasource-read: {}
    svc-ch_datasource-exec:
      hosts:
        noc-node-ubuntu20: {}
    svc-chwriter:
      children:
        cfg-chwriter-noc-node-ubuntu20:
          hosts:
            noc-node-ubuntu20: {}
        svc-chwriter-read: {}
    svc-chwriter-exec:
      hosts:
        noc-node-ubuntu20: {}
    svc-classifier:
      children:
        cfg-classifier-default-noc-node-ubuntu20:
          hosts:
            noc-node-ubuntu20: {}
        svc-classifier-read: {}
    svc-classifier-exec:
      hosts:
        noc-node-ubuntu20: {}
    svc-clickhouse:
      children:
        cfg-clickhouse-noc-node-ubuntu20:
          hosts:
            noc-node-ubuntu20: {}
        svc-clickhouse-read:
          hosts:
            noc-node-ubuntu20: {}
    svc-clickhouse-exec:
      hosts:
        noc-node-ubuntu20: {}
    svc-consul:
      children:
        cfg-consul-noc-node-ubuntu20:
          hosts:
            noc-node-ubuntu20: {}
        svc-consul-read:
          hosts:
            noc-node-ubuntu20: {}
    svc-consul-exec:
      hosts:
        noc-node-ubuntu20: {}
    svc-consul-template:
      children:
        cfg-consul-template-noc-node-ubuntu20:
          hosts:
            noc-node-ubuntu20: {}
        svc-consul-template-read:
          hosts:
            noc-node-ubuntu20: {}
    svc-consul-template-exec:
      hosts:
        noc-node-ubuntu20: {}
    svc-correlator:
      children:
        cfg-correlator-default-noc-node-ubuntu20:
          hosts:
            noc-node-ubuntu20: {}
        svc-correlator-read: {}
    svc-correlator-exec:
      hosts:
        noc-node-ubuntu20: {}
    svc-datastream:
      children:
        cfg-datastream-noc-node-ubuntu20:
          hosts:
            noc-node-ubuntu20: {}
        svc-datastream-read: {}
    svc-datastream-exec:
      hosts:
        noc-node-ubuntu20: {}
    svc-discovery:
      children:
        cfg-discovery-default-noc-node-ubuntu20:
          hosts:
            noc-node-ubuntu20: {}
        svc-discovery-read:
          hosts:
            noc-node-ubuntu20: {}
    svc-discovery-exec:
      hosts:
        noc-node-ubuntu20: {}
    svc-escalator:
      children:
        cfg-escalator-noc-node-ubuntu20:
          hosts:
            noc-node-ubuntu20: {}
        svc-escalator-read: {}
    svc-escalator-exec:
      hosts:
        noc-node-ubuntu20: {}
    svc-goss:
      children:
        cfg-goss-noc-node-ubuntu20:
          hosts:
            noc-node-ubuntu20: {}
        svc-goss-read: {}
    svc-goss-exec:
      hosts:
        noc-node-ubuntu20: {}
    svc-grafana:
      children:
        cfg-grafana-noc-node-ubuntu20:
          hosts:
            noc-node-ubuntu20: {}
        svc-grafana-read:
          hosts:
            noc-node-ubuntu20: {}
    svc-grafana-exec:
      hosts:
        noc-node-ubuntu20: {}
    svc-grafanads:
      children:
        cfg-grafanads-noc-node-ubuntu20:
          hosts:
            noc-node-ubuntu20: {}
        svc-grafanads-read: {}
    svc-grafanads-exec:
      hosts:
        noc-node-ubuntu20: {}
    svc-liftbridge:
      children:
        cfg-liftbridge-noc-node-ubuntu20: {}
      vars:
        liftbridge_loglevel: info
    svc-liftbridge-exec:
      hosts:
        noc-node-ubuntu20: {}
    svc-login:
      children:
        cfg-login-noc-node-ubuntu20:
          hosts:
            noc-node-ubuntu20: {}
        svc-login-read: {}
    svc-login-exec:
      hosts:
        noc-node-ubuntu20: {}
    svc-mailsender:
      children:
        cfg-mailsender-noc-node-ubuntu20:
          hosts:
            noc-node-ubuntu20: {}
        svc-mailsender-read: {}
    svc-mailsender-exec:
      hosts:
        noc-node-ubuntu20: {}
    svc-memcached:
      children:
        cfg-memcached-noc-node-ubuntu20:
          hosts:
            noc-node-ubuntu20: {}
        svc-memcached-read: {}
    svc-memcached-exec:
      hosts:
        noc-node-ubuntu20: {}
    svc-mongod:
      children:
        cfg-mongod-noc-node-ubuntu20:
          hosts:
            noc-node-ubuntu20: {}
        svc-mongod-read:
          hosts:
            noc-node-ubuntu20: {}
    svc-mongod-exec:
      hosts:
        noc-node-ubuntu20: {}
    svc-mrt:
      children:
        cfg-mrt-noc-node-ubuntu20:
          hosts:
            noc-node-ubuntu20: {}
        svc-mrt-read: {}
    svc-mrt-exec:
      hosts:
        noc-node-ubuntu20: {}
    svc-mx:
      children:
        cfg-mx-noc-node-ubuntu20:
          hosts:
            noc-node-ubuntu20: {}
        svc-mx-read: {}
    svc-mx-exec:
      hosts:
        noc-node-ubuntu20: {}
    svc-nats:
      children:
        cfg-nats-noc-node-ubuntu20:
          hosts:
            noc-node-ubuntu20: {}
        svc-nats-read: {}
    svc-nats-exec:
      hosts:
        noc-node-ubuntu20: {}
    svc-nbi:
      children:
        cfg-nbi-noc-node-ubuntu20:
          hosts:
            noc-node-ubuntu20: {}
        svc-nbi-read: {}
    svc-nbi-exec:
      hosts:
        noc-node-ubuntu20: {}
    svc-nginx:
      children:
        cfg-nginx-noc-node-ubuntu20:
          hosts:
            noc-node-ubuntu20: {}
        svc-nginx-read:
          hosts:
            noc-node-ubuntu20: {}
    svc-nginx-exec:
      hosts:
        noc-node-ubuntu20: {}
    svc-noc:
      children:
        cfg-noc-noc-node-ubuntu20:
          hosts:
            noc-node-ubuntu20: {}
        svc-noc-read:
          hosts:
            noc-node-ubuntu20: {}
    svc-noc-exec:
      hosts:
        noc-node-ubuntu20: {}
    svc-pgbouncer:
      children:
        cfg-pgbouncer-noc-node-ubuntu20:
          hosts:
            noc-node-ubuntu20: {}
        svc-pgbouncer-read: {}
    svc-kafka:
      children:
        cfg-kafka-noc-node-ubuntu20:
          hosts:
            noc-node-ubuntu20: {}
        svc-kafka-read: {}
    svc-kafka-exec:
      hosts:
        noc-node-ubuntu20: {}
    svc-kafkasender:
      children:
        cfg-kafkasender-noc-node-ubuntu20:
          hosts:
            noc-node-ubuntu20: {}
        svc-kafkasender-read: {}
    svc-kafkasender-exec:
      hosts:
        noc-node-ubuntu20: {}
    svc-pgbouncer-exec:
      hosts:
        noc-node-ubuntu20: {}
    svc-ping:
      children:
        cfg-ping-default-noc-node-ubuntu20:
          hosts:
            noc-node-ubuntu20: {}
        svc-ping-read: {}
    svc-ping-exec:
      hosts:
        noc-node-ubuntu20: {}
    svc-postgres:
      children:
        cfg-postgres-noc-node-ubuntu20:
          hosts:
            noc-node-ubuntu20: {}
        svc-postgres-read:
          hosts:
            noc-node-ubuntu20: {}
    svc-postgres-exec:
      hosts:
        noc-node-ubuntu20: {}
    svc-sae:
      children:
        cfg-sae-noc-node-ubuntu20:
          hosts:
            noc-node-ubuntu20: {}
        svc-sae-read:
          hosts:
            noc-node-ubuntu20: {}
    svc-sae-exec:
      hosts:
        noc-node-ubuntu20: {}
    svc-scheduler:
      children:
        cfg-scheduler-noc-node-ubuntu20:
          hosts:
            noc-node-ubuntu20: {}
        svc-scheduler-read: {}
    svc-scheduler-exec:
      hosts:
        noc-node-ubuntu20: {}
    svc-syslogcollector:
      children:
        cfg-syslogcollector-default-noc-node-ubuntu20:
          hosts:
            noc-node-ubuntu20: {}
        svc-syslogcollector-read: {}
    svc-syslogcollector-exec:
      hosts:
        noc-node-ubuntu20: {}
    svc-trapcollector:
      children:
        cfg-trapcollector-default-noc-node-ubuntu20:
          hosts:
            noc-node-ubuntu20: {}
        svc-trapcollector-read: {}
    svc-trapcollector-exec:
      hosts:
        noc-node-ubuntu20: {}
    svc-web:
      children:
        cfg-web-noc-node-ubuntu20:
          hosts:
            noc-node-ubuntu20: {}
        svc-web-read: {}
    svc-web-exec:
      hosts:
        noc-node-ubuntu20: {}
    svc-metrics-exec:
      hosts:
        noc-node-ubuntu20: {}
    svc-worker-exec:
      hosts:
        noc-node-ubuntu20: {}
    svc-ui-exec:
      hosts:
        noc-node-ubuntu20: {}
    ungrouped: {}
