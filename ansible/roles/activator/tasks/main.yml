---
- include: "os/{{ ansible_distribution }}/main.yml"

- name: Install activator python packages
  pip:
    chdir: "{{noc_root}}"
    requirements: "requirements/activator.txt"
    virtualenv: "{{noc_root}}"
  environment:
    https_proxy: "{{http_proxy}}"
    http_proxy: "{{http_proxy}}"
  tags:
    - requirements

- name: Create ssh keys directories
  file:
    path: "{{ noc_root }}/var/etc/ssh/{{ item.name }}"
    state: directory
    owner: root
    group: "{{ noc_group }}"
    mode: 0550
  with_items: "{{ noc_all_pools }}"
  tags:
    - config

#- name: Install ssh keys
#  copy:
#    src: "{{ item }}"
#    dest: "{{ noc_root }}/var/etc/ssh/{{ '/'.join(item.split('/')[-2:]) }}"
#    owner: root
#    group: "{{ noc_group }}"
#    mode: 0440
#  with_fileglob:
#    - "{{ tower_ssh_keys }}/*/id_*"
#  tags:
#    - config

- name: Tune sysctl.conf for activator
  sysctl:
    name: "{{item.name}}"
    value: "{{item.value}}"
    state: present
    reload: yes
  with_items:
    - { name: 'net.ipv4.tcp_no_metrics_save', value: 1}
    - { name: 'net.ipv4.tcp_window_scaling', value: 0}
    - { name: 'net.ipv4.tcp_timestamps', value: 1}
    - { name: 'net.ipv4.tcp_sack', value: 1}
    - { name: 'net.core.netdev_max_backlog', value: 5000}
    - { name: 'net.ipv4.tcp_max_tw_buckets', value: 360000}
    - { name: 'net.ipv4.tcp_max_syn_backlog', value: 4096}
    - { name: 'net.ipv4.tcp_fin_timeout', value: 10}
  tags:
    - config
  when: "'Linux' in ansible_system"

- name: Install activator monitoring
  template:
    src: "etc/telegraf/telegraf.d/noc-activator.conf.j2"
    dest: "{{etc_prefix}}/telegraf/telegraf.d/noc-activator.conf"
  notify: reload telegraf
  when: noc_cfg1.changed or noc_cfg2.changed or noc_cfg3.changed
  tags:
    - config