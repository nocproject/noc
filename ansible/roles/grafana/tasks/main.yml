---
- include: "os/{{ ansible_distribution }}/main.yml"

- name: Create Grafana directories
  file:
    path: "{{ noc_root }}/{{ item.path }}"
    state: directory
    owner: "{{ item.owner }}"
  with_items:
    - path: var/etc/grafana
      owner: root
    - path: var/db/grafana
      owner: "{{ grafana_user }}"
    - path: var/db/grafana_plugins
      owner: "{{ grafana_user }}"

- name: Create Grafana config
  template:
    src: grafana.ini
    dest: "{{ noc_root }}/var/etc/grafana/grafana.ini"
  notify: restart grafana
  tags:
    - config

- name: Set up dynamic dashboars
  copy:
    src: noc.js
    dest: "{{ grafana_home }}/public/dashboards/noc.js"

- name: Install grafana simple datasource plugin
  shell: "grafana-cli --pluginsDir {{ noc_root }}/var/db/grafana_plugins plugins install grafana-simple-json-datasource"
  args:
    creates: "{{ noc_root }}/var/db/grafana_plugins/grafana-simple-json-datasource/src/datasource.js"
  environment:
    http_proxy: "{{http_proxy}}"
    https_proxy: "{{http_proxy}}"
  tags:
    - requirements

- name: Add default influx datasource
  uri:
    url: "https://{{ noc_web_host }}/ui/grafana/api/datasources"
    method: POST
    user: admin
    password: admin
    force_basic_auth: yes
    status_code: 200, 401
    body_format: json
    validate_certs: no
    body:
      name: default
      type: influxdb
      url: "http://{{ noc_config.services.influxdb.0 }}"
      access: proxy
      isDefault: True
      database: "{{ noc_influxdb_db }}"
      user: "{{noc_influxdb_user}}"
      password: "{{ noc_influxdb_password }}"
      jsonData:
        timeInterval: 300
  ignore_errors: yes
  when: "{{ has_svc_influxdb | default(False) }}"
  tags:
    - config

- name: Add grafanads datasource
  uri:
    url: "https://{{ noc_web_host }}/ui/grafana/api/datasources"
    method: POST
    user: admin
    password: admin
    force_basic_auth: yes
    status_code: 200, 401
    body_format: json
    validate_certs: no
    body:
      name: NocDS
      type: grafana-simple-json-datasource
      url: "https://{{ noc_web_host }}/api/grafanads"
      access: direct
      isDefault: False
  ignore_errors: yes
  when: "{{ has_svc_grafanads | default(False) }}"
  tags:
    - config


- name: Start Grafana service
  service:
    name: "{{ grafana_system_service }}"
    enabled: yes
    state: started

- name: Wait for Grafana
  wait_for:
    port: "{{ noc_config['services']['grafana'][0].split(':')[1] }}"
    timeout: 60
    state: present
    host: 0.0.0.0
