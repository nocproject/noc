---
- name: Creating mongodb directories
  file:
    path: "{{ item }}"
    state: "directory"
    mode: 0755
  with_items:
    - "{{ noc_root }}/var/etc/mongo"

- name: Setting mongod config
  template:
    src: mongod.conf.j2
    dest: "{{ noc_root }}/var/etc/mongo/mongod.conf"
  notify: restart mongod
  tags:
    - config

- name: Setting mongod-arbiter config
  template:
    src: mongod-arbiter.conf.j2
    dest: "{{ noc_root }}/var/etc/mongo/mongod-arbiter.conf"
  notify: restart mongod-arbiter
  when: "{{ has_svc_mongod_arbiter | default(False) }}"
  tags:
    - config

- name: Generating mongo key file
  template:
    src: "mongo.key.j2"
    dest: "{{ noc_root }}/var/etc/mongo/mongo.key"

- include: "os/{{ ansible_distribution }}/main.yml"

- name: Setting mongo.key permissions
  file:
    path: "{{ noc_root }}/var/etc/mongo/mongo.key"
    owner: "{{ mongo_user }}"
    mode: 0400

- name: Install MongoDB logrotated config
  template:
    src: "etc/logrotate.d/mongod.conf.j2"
    dest: "/etc/logrotate.d/mongod.conf"
  when: "'Linux' in ansible_system"
  tags:
    - config

- name: Enable MongoDB system service
  service:
    name: "{{ mongod_system_service }}"
    enabled: yes
    state: started

- name: Create MongoDB arbiter directory
  file:
    path: "{{ noc_root }}/var/db/mongo-arbiter"
    owner: "{{ mongo_user }}"
    group: "{{ mongo_user }}"
    mode: 0700
    state: directory
  when: "{{ has_svc_mongod_arbiter | default(False) }}"

- name: Install MongoDB arbiter logrotated config
  template:
    src: "etc/logrotate.d/mongod-arbiter.conf.j2"
    dest: "/etc/logrotate.d/mongod-arbiter.conf"
  when: "{{ has_svc_mongod_arbiter | default(False) }} and 'Linux' in ansible_system"
  tags:
    - config

- name: Install shell.js
  template:
    src: shell.js.j2
    dest: "{{ noc_root }}/var/etc/mongo/shell.js"
  tags:
    - config

- name: Enable MongoDB arbiter system service
  service:
    name: "{{ mongod_arbiter_system_service }}"
    enabled: yes
    state: started
  when: "{{ has_svc_mongod_arbiter | default(False) }}"

- include: "master.yml"
  when: "{{ has_svc_mongod_master  | default(False) }}"
  tags:
    - rs_init

- name: Install mongodb monitoring
  template:
    src: "etc/telegraf/telegraf.d/mongodb.conf.j2"
    dest: "{{etc_prefix}}/telegraf/telegraf.d/mongodb.conf"
  notify: reload telegraf
  tags:
    - config
