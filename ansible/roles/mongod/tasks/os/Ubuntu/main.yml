---
- name: Add MongoDB apt key
  apt_key:
    keyserver: keyserver.ubuntu.com
    id: "{{ item }}"
  with_items:
    - 7F0CEB10
    - EA312927
  environment:
    https_proxy: "{{http_proxy}}"
    http_proxy: "{{http_proxy}}"

- name: Add MongoDB repository
  apt_repository:
    repo: "deb http://repo.mongodb.org/apt/ubuntu {{ ansible_distribution_release }}/mongodb-org/{{ mongo_version }} multiverse"
    state: present
    update_cache: yes
  environment:
    https_proxy: "{{http_proxy}}"
    http_proxy: "{{http_proxy}}"

- name: Disable Transparent Hugepages (runtime)
  shell: if test -f /sys/kernel/mm/transparent_hugepage/enabled; then
            echo never > /sys/kernel/mm/transparent_hugepage/enabled;
            echo never > /sys/kernel/mm/transparent_hugepage/defrag;
         fi
  notify: restart mongod

- name: Install DTH service file
  template:
    src: "os/Ubuntu/etc/init.d/disable-transparent-hugepages.j2"
    dest: "/etc/init.d/disable-transparent-hugepages"
    mode: "a+x"
  when: "ansible_service_mgr != 'systemd'"
  notify: restart mongod

- name: Run DTH service (boot, runtime)
  service:
    name: disable-transparent-hugepages
    enabled: yes
    state: restarted
  when: "ansible_service_mgr != 'systemd'"

- name: Set mongod defaults
  template:
    src: "os/Ubuntu/etc/default/mongod.j2"
    dest: "/etc/default/mongod"
  when: "ansible_service_mgr != 'systemd'"
  notify: restart mongod
  tags:
    - config

- name: Install mongodb monitoring
  template:
    src: "etc/telegraf/telegraf.d/mongodb.conf.j2"
    dest: "/etc/telegraf/telegraf.d/mongodb.conf"
  notify: reload telegraf

- name: Install MongoDB
  apt:
    name: mongodb-org
    state: present
    update_cache: yes
    cache_valid_time: "{{apt_cache_valid_time | default (3600)}}"
  environment:
    https_proxy: "{{http_proxy}}"
    http_proxy: "{{http_proxy}}"

- name: Delete mongod init file
  file:
    path: /etc/init.d/mongod
    state: absent
  when: "ansible_service_mgr == 'systemd'"

- name: Copy mongod service file
  template:
    src:  os/Ubuntu/etc/systemd/system/mongod.service.j2
    dest: /etc/systemd/system/mongod.service
  when: "ansible_service_mgr == 'systemd'"
  register: mongod_service
  notify: restart mongod

- name: Copy systemd tmpfile
  template:
    src: etc/tmpfiles.d/mongo.conf.j2
    dest: /etc/tmpfiles.d/mongo.conf
  when: "ansible_service_mgr == 'systemd'"

- include: "arbiter.yml"
  when: "{{ has_svc_mongod_arbiter | default(False) }}"

- name: Reload systemd daemon
  command: /bin/systemctl daemon-reload
  when: "mongod_service.changed and ansible_service_mgr == 'systemd'"
