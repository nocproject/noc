{% if ansible_distribution == "FreeBSD" %}
events {
    worker_connections  1024;
}

http {
    include       mime.types;
    default_type  application/octet-stream;
{% endif %}

upstream noc-web {
{% for n in noc_config["services"].get("web", []) %}
    server {{ n }};
{% endfor %}
}

upstream notebook {
{% for n in noc_config["services"].get("notebook", []) %}
    server {{ n }};
{% endfor %}
}

server {
    listen 443;
    server_name {{ noc_web_host }};
    ssl on;
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_certificate {{ nginx_ssl_cert_path }};
    ssl_certificate_key {{ nginx_ssl_key_path }};
    add_header Strict-Transport-Security "max-age=63072000; includeSubDomains";
    add_header X-Content-Type-Options nosniff;
    ssl_stapling on;
    ssl_stapling_verify on;

    access_log  {{ nginx_log_dir }}/noc.access.log;
    error_log  {{ nginx_log_dir }}/noc.error.log;

    location /media/ {
        alias {{ noc_root }}/lib/python/site-packages/django/contrib/admin/static/;
        gzip on;
        gzip_types text/css text/x-js;
    }

    location /static/ {
        alias {{ noc_root }}/static/;
        gzip on;
        gzip_types text/css text/x-js;
    }

    location ~ ^([^/]+)/([^/]+)/(js|css|img)/(.+)$ {
        root {{ noc_root }};
        rewrite ^([^/]+)/([^/]+)/(js|css|img)/(.+)$
                /$1/apps/$2/$3/$4 break;
        gzip on;
        gzip_types text/css text/x-js;
    }

    location ~* ^/notebook/(api/kernels/[^/]+/(channels|iopub|shell|stdin)|terminals/websocket)/? {
        proxy_pass http://notebook;
        gzip on;
        gzip_types text/css text/x-js;
        proxy_set_header Host $http_host;
        proxy_set_header X-Scheme $scheme;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        # Websockets support
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_read_timeout 86400;
    }

    location /notebook {
        proxy_pass http://notebook;
        gzip on;
        gzip_types text/css text/x-js;
        proxy_set_header Host $http_host;
        proxy_set_header X-Scheme $scheme;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    location / {
        proxy_pass http://noc-web;
        proxy_read_timeout 900;
        gzip on;
        gzip_types text/css text/x-js;
        proxy_set_header Host $http_host;
        proxy_set_header X-Scheme $scheme;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}
{% if ansible_distribution == "FreeBSD" %}
}
{% endif %}
