- name: set proxy for yum
  lineinfile:
    dest: /etc/yum.conf
    regexp: "^proxy=.*"
    line: "proxy=http://{{http_proxy}}"
  when: "http_proxy is defined and http_proxy"
  tags:
    - config

- name: Disable selinux
  selinux:
    policy: targeted
    state: permissive

- name: Add EPEL Repo
  template:
    src: os/RedHat/etc/yum.repos.d/epel.repo.j2
    dest: /etc/yum.repos.d/epel.repo
  tags:
    - repo

- name: Add GPG key EPEL
  rpm_key:
    key: http://dl.fedoraproject.org/pub/epel/RPM-GPG-KEY-EPEL-7
    state: present
  environment:
    http_proxy: "{{http_proxy}}"
    https_proxy: "{{http_proxy}}"
  tags:
    - repo

- name: Enable the PostgreSQL repository RHEL
  yum:
    name: http://yum.postgresql.org/{{postgresql_version}}/redhat/rhel-{{ ansible_distribution_major_version }}-{{ ansible_architecture }}/pgdg-redhat{{postgresql_version|replace(".","")}}-{{postgresql_version}}-2.noarch.rpm
    state: present
  environment:
    http_proxy: "{{http_proxy}}"
  tags:
    - repo

- name: Install RedHat system packages 1/2
  yum:
    name: "{{item}}"
    state: present
    update_cache: yes
  with_items:
   - tcpdump
   - net-tools
   - man
   - mercurial
   - python-virtualenv
   - telnet
   - gcc
   - postgresql{{postgresql_version|replace(".","")}}
   - postgresql{{postgresql_version|replace(".","")}}-devel
   - libcurl-devel
   - diffstat
   - dwz
   - elfutils
   - gdb
   - patch
   - perl-Thread-Queue
   - perl-srpm-macros
   - procmail
   - redhat-rpm-config
   - rpm-build
   - unzip
   - zip
   - lsof
   - numactl
   - libffi
   - libffi-devel
   - libmemcached
  environment:
    https_proxy: "{{http_proxy}}"
    http_proxy: "{{http_proxy}}"
  tags:
    - requirements

- name: Install RedHat system packages 2/2
  yum:
    name: "{{item}}"
    state: present
  with_items:
   - quilt
   - jemalloc
  environment:
    http_proxy: "{{http_proxy}}"

- include: "telegraf.yml"

- include: "firewall.yml"
  tags:
    - firewall

- name: Install supervisord init script
  template:
    src: "os/RedHat/etc/systemd/system/noc.service.j2"
    dest: "/usr/lib/systemd/system//{{ noc_system_service }}.service"
    mode: "a+rx"

- name: Reload systemd daemon
  shell: /usr/bin/systemctl daemon-reload

