# Post-deployment tasks
---
- name: Build supervisor config
  command: "{{ noc_root }}/scripts/deploy/apply-config {{ inventory_hostname }}"
  register: result
  changed_when: "'CHANGED' in result.stdout"
  args:
    chdir: "{{ noc_root }}"
  tags:
    - config

- name: restart telegraf
  service:
    name: telegraf
    state: restarted
    enabled: yes
  changed_when: False
  when: "'FreeBSD' not in ansible_distribution"

- name: check if noc running
  shell: "{{ noc_root }}/noc ctl status"
  register: noc_ctl_status
  tags:
    - config
    - soft_restart

- name: Create alerta blackout
  uri:
    url: "{{alerta_url}}/api/blackout?api-key={{alerta_token}}"
    method: POST
    body: "{{ alerta_blackout | to_json }}"
    body_format: json
    status_code: 201
  when: "alerta_notified.changed"
  register: blackout
  changed_when: "blackout.status == 201"
  run_once: true
  tags:
    - always


- name: Reread config
  shell: "{{ noc_root }}/noc ctl reread"
  when: "'RUNNING' in noc_ctl_status.stdout"
  register: noc_ctl_reread
  tags:
    - config
    - soft_restart

- name: Serial NOC restart
  shell: "{{ noc_root }}/noc ctl serialrestart all"
  when: "noc_ctl_reread"
  tags:
    - soft_restart

- name: Restart NOC node
  service:
    name: "{{ noc_system_service }}"
    state: restarted
    sleep: 3
    enabled: yes
  changed_when: False
  tags:
    - restart

- name: umount cache dir
  mount:
      src: cache
      name: /root/.cache
      state: absent
      fstype: vboxsf
  when: "'virtualbox' in ansible_virtualization_type and 'vboxsf' in vboxsf_support.stdout"
  ignore_errors: yes

- name: notify alerta of deployment
  uri:
    url: "{{alerta_url}}/api/alert?api-key={{alerta_token}}"
    method: POST
    body: "{{ alerta_deploy_finish | to_json }}"
    body_format: json
    status_code: 201, 202
  when: "alerta_notified"
  tags:
    - always
