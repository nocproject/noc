# Post-deployment tasks
---
- name: Build supervisor config
  command: "{{ noc_root }}/scripts/deploy/apply-config {{ inventory_hostname }}"
  register: result
  changed_when: "'CHANGED' in result.stdout"
  args:
    chdir: "{{ noc_root }}"
  tags:
    - config

- name: restart telegraf
  service:
    name: telegraf
    state: restarted
    enabled: yes
  changed_when: False
  when: "'FreeBSD' not in ansible_distribution"

- name: check if noc running
  shell: "{{ noc_root }}/noc ctl status"
  register: noc_ctl_status
  tags:
    - config
    - soft_restart

- name: Create alerta blackout
  uri:
    url: "{{alerta_url}}/api/blackout?api-key={{alerta_token}}"
    method: POST
    body: "{{ alerta_blackout | to_json }}"
    body_format: json
    status_code: 201
    validate_certs: no
  when: "alerta_notified.changed"
  register: blackout
  changed_when: "blackout.status == 201"
  environment:
    https_proxy: "{{http_proxy}}"
  run_once: true
  tags:
    - always

- name: Reread config
  shell: "{{ noc_root }}/noc ctl reread"
  when: "'RUNNING' in noc_ctl_status.stdout"
  register: noc_ctl_reread
  tags:
    - config
    - soft_restart

- name: Serial NOC restart
  shell: "{{ noc_root }}/noc ctl serialrestart all"
  when: "noc_ctl_reread"
  changed_when: False
  tags:
    - soft_restart

- name: Restart NOC node
  service:
    name: "{{ noc_system_service }}"
    state: restarted
    sleep: 3
    enabled: yes
  changed_when: False
  tags:
    - restart

- name: Wait for NOC to start
  pause:
    seconds: 30

- name: Add default influx datasource
  uri:
    url: "https://{{ noc_web_host }}/ui/grafana/api/datasources"
    method: POST
    timeout: 60
    user: admin
    password: admin
    force_basic_auth: yes
    status_code: 200, 401, 500 #500 - ugly stupid hack. but grafana returns 500 when ds already exists
    body_format: json
    validate_certs: no
    body:
      name: default
      type: influxdb
      url: "http://{{ noc_config.services.influxdb.0 }}"
      access: proxy
      isDefault: True
      database: "{{ noc_influxdb_db }}"
      user: "{{noc_influxdb_user}}"
      password: "{{ noc_influxdb_password }}"
      jsonData:
        timeInterval: 300
  ignore_errors: yes
  register: ids
  changed_when: ids.status != 500
  when: "{{ has_svc_influxdb | default(False) }}"
  tags:
    - config

- name: Add grafanads datasource
  uri:
    url: "https://{{ noc_web_host }}/ui/grafana/api/datasources"
    method: POST
    user: admin
    password: admin
    force_basic_auth: yes
    status_code: 200, 401, 500 #500 - ugly stupid hack. but grafana returns 500 when ds already exists
    body_format: json
    validate_certs: no
    body:
      name: NocDS
      type: grafana-simple-json-datasource
      url: "https://{{ noc_web_host }}/api/grafanads"
      access: direct
      isDefault: False
  ignore_errors: yes
  register: gds
  changed_when: gds.status != 500
  when: "{{ has_svc_grafanads | default(False) }}"
  tags:
    - config

- name: notify alerta of deployment end
  uri:
    url: "{{alerta_url}}/api/alert?api-key={{alerta_token}}"
    method: POST
    body: "{{ alerta_deploy_finish | to_json }}"
    body_format: json
    status_code: 201, 202
    validate_certs: no
  when: "alerta_notified.changed"
  run_once: true
  environment:
    https_proxy: "{{http_proxy}}"
  tags:
    - always
