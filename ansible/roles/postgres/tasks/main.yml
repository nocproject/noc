---
# http://www.ibm.com/support/knowledgecenter/SSEPGG_10.5.0/com.ibm.db2.luw.qb.server.doc/doc/t0008238.html?lang=ru
- name: tune systcl for PostgesSQL
  sysctl:
    name: "{{item.name}}"
    value: "{{item.value}}"
    state: present
    reload: yes
  with_items:
    - { name: kernel.shmmax, value: "{{ kernel_shmmax }}" }
    - { name: kernel.shmall, value: "{{ kernel_shmall }}" }
    - { name: kernel.sem, value: '250 256000 400 4096' }
  tags:
    - config
  when: "'Linux' in ansible_system"

- include: "os/{{ ansible_distribution }}/main.yml"

- name: Creating postgres directories
  file:
    path: "{{item}}"
    state: "directory"
    owner: "{{postgres_user}}"
    mode: 0700
  with_items:
    - "{{noc_root}}/var/etc/postgres"

- name: Setting pg_hba.conf
  lineinfile:
    dest: "{{postgresql_hba_path}}"
    line: "host    all             all             0.0.0.0/0            md5"
  notify: restart postgres
  register: s1
  tags:
    - config

- name: Including postgres.conf
  lineinfile:
    dest: "{{postgresql_conf_path}}"
    line: "include = '{{ noc_root }}/var/etc/postgres/postgres.conf'"
  notify: restart postgres
  register: s2
  tags:
    - config

- name: Setting config
  template:
    src: "postgres.conf.j2"
    dest: "{{ noc_root }}/var/etc/postgres/postgres.conf"
  notify: restart postgres
  register: s3
  tags:
    - config

- name: Apply PostgreSQL config
  service:
    name: "{{postgres_system_service}}"
    state: restarted
  when: s1.changed or s2.changed or s3.changed

- name: Enable postgres system service
  service: name="{{postgres_system_service}}" enabled=yes state=started

- name: Create user
  postgresql_user:
    name: "{{noc_pg_user}}"
    password: "{{noc_pg_password}}"
    login_user: "{{ postgres_user }}"
    db: postgres
    role_attr_flags: CREATEDB,NOSUPERUSER
  become_user: "{{postgres_user}}"
  when: "{{ has_svc_postgres_master | default(False) }}"

- name: Create database
  postgresql_db:
    name: "{{noc_pg_db}}"
    encoding: "UTF-8"
    owner: "{{noc_pg_user}}"
    login_user: "{{ postgres_user }}"
    state: "present"
  become_user: "{{postgres_user}}"
  when: "{{ has_svc_postgres_master | default(False) }}"

- name: setup env
  template:
    src: "{{item.name}}"
    dest: "{{item.dest}}"
    mode: "{{item.mode}}"
    owner: "{{noc_user}}"
  with_items:
    - { name: env.j2, dest: "{{ noc_root }}/var/etc/postgres/env", mode: "u=rw,g=r,o=r" }
    - { name: pgpass.j2, dest: "{{ noc_root }}/var/etc/postgres/.pgpass", mode: "u=rw,g-rwx,o-rwx" }