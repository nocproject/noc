---
- name: Check replica set is initialized
  command: "{{ mongosh_path }} --host {{ mongod_rs }}/{{ mongo_listen_addr }} --eval 1"
  register: rs_status
  changed_when:
    - "'No primary detected for set' in rs_status.stdout or 'Unable to reach primary for set' in rs_status.stdout or 'RSM host selection timeout' in rs_status.stdout"
    - "'connect failed to replica set' in rs_status.stdout"
  failed_when: "False"
  tags:
    - config

- name: Create replica set configuration script
  template:
    src: rsinit.js.j2
    dest: "{{ mongo_dir }}/rsinit.js"
  register: rs_conf_status
  tags:
    - config

- block:
    - name: Initial replica set configuration
      command: "{{ mongosh_path }} {{ mongo_dir }}/rsinit.js"

    - name: Create admin user configuration script
      template:
        src: admininit.js.j2
        dest: "{{ mongo_dir }}/admininit.js"
      no_log: "{{ tower_show_secrets }}"
      tags:
        - config

    - name: sleep while mongodb electing primary
      pause:
        seconds: 5

    - name: Create admin user
      command: "{{ mongo_path }} admin {{ mongo_dir }}/admininit.js"
  when: rs_status is changed

- name: Create database user configuration script
  template:
    src: userinit.js.j2
    dest: "{{ mongo_dir }}/userinit.js"
  no_log: "{{ tower_show_secrets }}"
  register: user_status
  tags:
    - config

- name: Create database user
  command: "{{ mongosh_path }} -u {{ noc_mongo_admin_user }} -p '{{ mongod_password }}' {{ mongod_db }} --authenticationDatabase admin {{ mongo_dir }}/userinit.js"  # noqa 204
  when: user_status is changed
  tags:
    - skip_ansible_lint

- name: Update replica set configuration
  command: "{{ mongosh_path }} -u {{ noc_mongo_admin_user }} -p '{{ mongod_password }}' admin {{ mongo_dir }}/rsinit.js"
  when:
    - rs_conf_status is changed
    - rs_status is changed

- name: set master_init done
  set_fact:
    mongo_master_init_done: "True"
