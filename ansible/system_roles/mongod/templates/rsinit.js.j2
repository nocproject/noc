#jinja2: lstrip_blocks: True
//
// Replica set initialization
//
(function() {
    var status, members, t, nt, config, i, memberData, m,
        hasMaster = function(status) {
            return status.members.filter(function(x) {
                return x.state === 1;
            }).length > 0;
        };

    members = [];
{% for n in groups["svc-mongod-exec"] %}
    members.push({
        {% if hostvars[n]["mongod_power"] == 'bootstrap' %}
        _id: {{ hostvars[n]["node_id"] }},
        host: "{{ n }}:27017",
        priority: 2
        {% elif hostvars[n]["mongod_power"] == 'server' %}
        _id: {{ hostvars[n]["node_id"] }},
        host: "{{ n }}:27017",
        priority: 1
        {% elif hostvars[n]["mongod_power"] == 'arbiter' %}
        _id: 99,
        host: "{{ n }}:27018",
        arbiterOnly: true
        {% elif hostvars[n]["mongod_power"] == 'hidden' %}
        _id: {{ hostvars[n]["node_id"] }},
        host: "{{ n }}:27017",
        priority: 0,
        hidden: true
        {% endif %}
    });
{% endfor %}

    try {
      status = rs.status();
    } catch (e) {
      status = { ok: 0 };
    }	
    if(status.ok) {
        // Already exists
        memberData = {};
        for(i = 0; i < members.length; i++) {
            m = members[i];
            memberData[m._id] = m;
        }
        conf = rs.conf();
        conf.members = conf.members.filter(function(x) {
            return !!memberData[x._id];
        });
        // Update priorities
        for(i = 0; i < conf.members.length; i++) {
            member = conf.members[i];
            if(memberData[member._id].priority) {
                member.priority = memberData[member._id].priority;
            }
            member.arbiterOnly = !!memberData[member._id].arbiterOnly;
            delete memberData[member._id];
        }
        rs.reconfig(conf);
        // Create missed
        for(i in memberData) {
            rs.add(memberData[i]);
        }
        // Remove stale
    } else {
        // New config
        rs.initiate({
            _id: "{{ mongod_rs }}",
            version: 1,
            members: [{
                _id: {{ hostvars[groups['svc-mongo-primary'][0]]["node_id"] }},
                host: "{{ groups['svc-mongo-primary'][0] }}:27017",
                priority: 2
            }]
        });
    }
    // Wait for replicaset is initiated
    t = new Date().getTime();
    for(;;) {
        status = rs.status();
        if(status.ok && hasMaster(status)) {
            break;
        }
        sleep(1000);
        nt = new Date().getTime();
        if(nt > (t + 15000)) {
            break;
        }
    }
})();
