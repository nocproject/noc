# General settings
#
# for os specific see pre role

# packages
postgresql_version: "9.4"
mongo_version: "3.2"
grafana_version: "3.1.1-1470047149"
nsq_version: "0.3.8"

http_proxy:  "" # just default. please set actual variable via tower on DC tab

grafana_group: grafana
grafana_home: /usr/share/grafana
grafana_system_service: grafana-server
grafana_user: grafana
influx_path: /usr/bin/influx
influxdb_conf: /etc/influxdb/influxdb.conf
influxdb_db_path: /var/lib/influxdb
influxdb_group: influxdb
influxdb_system_service: influxdb
influxdb_user: influxdb
mongo_arbiter_log_path: /var/log/mongodb/mongod-arbiter.log
mongo_arbiter_pid: /var/run/mongodb/mongod-arbiter.pid
mongo_db_path: /var/lib/mongo/
mongo_fork: "false"
mongo_log_path: /var/log/mongodb/mongod.log
mongo_path: /usr/bin/mongo
mongo_pid: /var/run/mongodb/mongod.pid
mongo_user: mongodb
mongod_arbiter_system_service: mongod-arbiter
mongod_path: /usr/bin/mongod
mongod_system_service: mongod
nginx_conf_path: /etc/nginx/conf.d/noc.conf
nginx_log_dir: /var/log/nginx
nginx_path: /usr/sbin/nginx
nginx_ssl_cert_path: /etc/nginx/ssl/noc.crt
nginx_ssl_key_path: /etc/nginx/ssl/noc.key
nginx_system_service: nginx
nginx_user: nginx
noc_service_pidfile: /var/run/noc.pid
noc_system_service: noc

#Memtune
kernel_shmall: "{{ ansible_memtotal_mb * 128 }}"
kernel_shmmax: "{{ kernel_shmall|int() * 4096 }}"

postgres_path: /usr/bin/postgres
postgres_system_service: postgresql
postgres_user: postgres
postgresql_conf_path: /var/lib/pgsql/data/postgresql.conf
postgresql_hba_path: /var/lib/pgsql/data/pg_hba.conf

apt_cache_valid_time: 86400
pycurl_ssl_library: openssl

redis_user: redis
redis_group: redis
redis_daemon: redis-server
redis_conf_path: "{{noc_root}}/var/etc/redis"

redis_loglevel: "notice"
redis_logfile: /var/log/redis/redis-server.log
# Set to an empty set to disable persistence (saving the DB to disk).
redis_save:
  - 900 1
  - 300 10
  - 60 10000

redis_rdbcompression: "yes"
redis_dbfilename: dump.rdb
redis_maxmemory_policy: "noeviction"
redis_maxmemory_samples: 5
redis_appendonly: "no"
redis_appendfsync: "everysec"

# Alerta http://docs.alerta.io/en/latest/api/reference.html

# seconds
alerta_blackout_duration: 300

alerta_deploy_start:
    resource: tower
    event: Deploy
    environment: Production
    service:
      - NOC
    status: open
    severity: informational
    text: "Deployment on {{noc_env}} started with tags: {{ ansible_tags }}"

alerta_deploy_finish:
    resource: tower
    event: Deploy
    environment: Production
    service:
      - NOC
    status: closed
    text: "Deployment on {{noc_env}} finished with tags: {{ ansible_tags }}"

alerta_blackout:
    environment: Production
    service:
      - supervisord
    duration: "{{alerta_blackout_duration}}"
