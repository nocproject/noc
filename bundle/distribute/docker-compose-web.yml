version: '2'
services:
  web:
    image: registry.getnoc.com/noc/noc-docker:master
    restart: always
    command: python ./services/web/service.py
    networks:
      - backend
    environment:
      SERVICE_NAME: web
      NOC_CONFIG: consul://${DNS}/noc,env:///NOC
    dns: ${DNS}

  login:
    image: registry.getnoc.com/noc/noc-docker:master
    restart: always
    command: python ./services/login/service.py
    networks:
      - backend
    environment:
      SERVICE_NAME: login
      NOC_CONFIG: consul://${DNS}/noc,env:///NOC
    dns: ${DNS}

  card:
    image: registry.getnoc.com/noc/noc-docker:master
    restart: always
    command: python ./services/card/service.py
    networks:
      - backend
    environment:
      SERVICE_NAME: card
      NOC_CONFIG: consul://${DNS}/noc,env:///NOC
    dns: ${DNS}

  mrt:
    image: registry.getnoc.com/noc/noc-docker:master
    restart: always
    command: python ./services/mrt/service.py
    networks:
      - backend
    environment:
      SERVICE_NAME: mrt
      NOC_CONFIG: consul://${DNS}/noc,env:///NOC
    dns: ${DNS}

  grafanads:
    image: registry.getnoc.com/noc/noc-docker:master
    restart: always
    command: python ./services/grafanads/service.py
    networks:
      - backend
    environment:
      SERVICE_NAME: grafanads
      NOC_CONFIG: consul://${DNS}/noc,env:///NOC
    dns: ${DNS}

  bi:
    image: registry.getnoc.com/noc/noc-docker:master
    restart: always
    command: python ./services/bi/service.py
    networks:
      - backend
    environment:
      SERVICE_NAME: bi
      NOC_CONFIG: consul://${DNS}/noc,env:///NOC
    dns: ${DNS}
