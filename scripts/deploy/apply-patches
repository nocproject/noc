#!./bin/python
# -*- coding: utf-8 -*-
##----------------------------------------------------------------------
## ./scripts/apply-patches
## Apply local patches
##----------------------------------------------------------------------
## Copyright (C) 2007-2014 The NOC Project
## See LICENSE for details
##----------------------------------------------------------------------

## Python modules
import os
import sys
import subprocess
## Third-party packages
try:
    from pip.util import get_installed_distributions  # Pip 1.5
except ImportError:
    from pip.utils import get_installed_distributions  # Pip 6

PATCHES_ROOT = "patches"


def fix_patches():
    """
    Uninstall legacy patches
    """
    print "Fixing patches"
    uninstall = [d.project_name for d in get_installed_distributions()
                 if d.project_name in ("Django", "mongoengine")]
    for p in uninstall:
        subprocess.check_call(["./bin/pip", "uninstall", "-y", p])


def revert_patches():
    r = subprocess.call(["quilt", "applied"])
    if r == 0:
        subprocess.check_call(["quilt", "pop", "-a"])


def apply_dist_patches():
    """
    Apply distribution patches
    """
    # Get installed packages
    pkgs = set()
    for d in get_installed_distributions():
        pkgs.add("%s==%s" % (d.project_name, d.version))
    # Get available patches
    patches = set()
    for p in os.listdir(PATCHES_ROOT):
        if "==" in p:
            patches.add(p)
    # Push all available patches
    for p in patches.intersection(pkgs):
        subprocess.check_call(["quilt", "push", p])


def apply_patches():
    """
    Apply all patches
    """
    apply_dist_patches()


if __name__ == "__main__":
    if "--revert" in sys.argv:
        revert_patches()
    elif "--fix" in sys.argv:
        fix_patches()
    else:
        apply_patches()
