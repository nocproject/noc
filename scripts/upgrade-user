#!/bin/sh
##----------------------------------------------------------------------
## Initialize and upgrade NOC:
## Performed with $NOC_USER credentials
##----------------------------------------------------------------------
## Copyright (C) 2007-2013 The NOC Project
## See LICENSE for details
##---------------------------------------------------------------------

##
## Helper functions definitions
##
PROGNAME=`basename $0`

error_exit ( ) {
    printf "\033[1;31m$PROGNAME: ${1:-'Unknown error'}\033[0m\n" 1>&2
    echo "Terminating" 1>&2
    exit 1
}

info ( ) {
    echo $1 1>&2
}

# Check configuration files
info "Checking configuration files"
./scripts/check-conf || error_exit "$LINENO: configuration check failed"
# Check postgresql database
info "Checking postgresql database connection"
./scripts/check-db.py --pg || error_exit "$LINENO: Unable to connect to postgresql database. Check noc.conf settings"
# Check mongodb database connection
info "Checking mongodb database connection"
./scripts/check-db.py --mongo || error_exit "$LINENO: Unable to connect to mongodb database. Check noc.conf settings"
# Synchronize database
info "Synchronizing database"
./noc syncdb --noinput || error_exit "$LINENO: syncdb failed"
# Migrate database
info "Migrating database"
./noc migrate --ignore-ghost-migrations || error_exit "$LINENO: migrate failed"
# Synchronize mongodb collections
info "Synchronize collections"
./noc collection --sync || error_exit "$LINENO: collection --sync failed"
# Generate SSH keys
if [ ! -f etc/ssh/id_rsa ]; then
    info "Generating SSH keys"
    ./noc generate-ssh-keys || error_exit "$LINENO: generate-ssh-keys failed"
fi
# Set up permissions
info "Setting up permissions"
./noc sync-perm || error_exit "$LINENO: sync-perm failed"
# Synchronize refbooks
info "Synchronizing refbooks"
./noc sync-refbooks || error_exit "$LINENO: sync-refbooks failed"
# Synchronize MIBS
info "Synchronize MIBs"
./noc sync-mibs || error_exit "$LINENO: sync-mibs failed"
# Check FTS index
info "Checking FTS index"
./noc index --check
if [ $? -ne 0 ]; then
    ./noc index --reindex -v1 || error_exit "$LINENO: index failed"
fi
